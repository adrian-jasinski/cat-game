Metadata-Version: 2.4
Name: cat-platformer
Version: 0.1.0
Summary: A simple 2D platformer game with a cat jumping over obstacles
Author-email: You <your.email@example.com>
License: MIT
Requires-Python: ==3.12
Description-Content-Type: text/markdown
Requires-Dist: pygame==2.5.2
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"

# Cat Platformer Game

A simple 2D platformer game built with Pygame where a red cat jumps over obstacles.

## Requirements

- Python 3.12 (exact version, not higher)
- Pygame 2.5.2

## Python Version

This project requires **exactly Python 3.12**, not higher or lower. A `.python-version` file is included for tools like pyenv to automatically select the correct version.

You can verify your Python version with:

```bash
python --version
```

Or use the included version check script:

```bash
python check_python_version.py
```

## Quick Start

The easiest way to play is using the play.py script, which checks Python version and handles pygame installation:

```bash
./play.py
```

OR

```bash
python play.py
```

## Quick Setup

Use the provided setup scripts for easy installation:

- On Linux/macOS:
  ```bash
  chmod +x setup.sh
  ./setup.sh
  ```

- On Windows:
  ```
  setup.bat
  ```

## Running the Game

After installation, you can run the game in several ways:

1. Using the installed command-line script:
   ```bash
   cat-platformer
   ```

2. Using the executable script in the project root:
   ```bash
   ./cat_platformer_game.py
   ```

3. As a Python module:
   ```bash
   python -m cat_platformer
   ```

4. Running the main script directly:
   ```bash
   python cat_platformer_game.py
   ```

## Setup with uv (Recommended)

[uv](https://github.com/astral-sh/uv) is a fast Python package installer and resolver. Here's how to set up the project using uv:

1. Make sure you have Python 3.12 installed
2. Install uv if you don't have it already:
   ```bash
   curl -fsSL https://astral.sh/uv/install.sh | bash
   ```

3. Create a virtual environment in the project directory:
   ```bash
   uv venv --python=python3.12
   ```

4. Activate the virtual environment:
   - On Linux/macOS:
     ```bash
     source .venv/bin/activate
     ```
   - On Windows:
     ```bash
     .venv\Scripts\activate
     ```

5. Install dependencies from pyproject.toml:
   ```bash
   uv pip install -e .
   ```

6. Run the game:
   ```bash
   python cat_game.py
   ```

## Alternative Setup with pip

1. Make sure you have Python 3.12 installed
2. Create a virtual environment:
   ```bash
   python -m venv venv
   ```
3. Activate the virtual environment:
   - On Linux/macOS:
     ```bash
     source venv/bin/activate
     ```
   - On Windows:
     ```bash
     venv\Scripts\activate
     ```
4. Install from pyproject.toml:
   ```bash
   pip install -e .
   ```
5. Run the game:
   ```bash
   python cat_game.py
   ```

## Development

This project uses a pyproject.toml file for dependency management and build configuration. The project has been switched from requirements.txt to pyproject.toml for better packaging and distribution.

You can install development dependencies with:

```bash
uv pip install -e ".[dev]"
```

To format and lint your code, you can use:

```bash
# Format with black
black cat_platformer

# Sort imports
isort cat_platformer

# Lint with flake8
flake8 cat_platformer
```

## Controls

- **Space**: Jump
- **R**: Restart game after game over

## Game Mechanics

- Control a red cat on a platform
- Press space to jump over approaching obstacles
- Score increases for each obstacle you successfully avoid
- Game ends if you collide with an obstacle
- Press R to restart the game after a game over 
